/* 
知识要点总结（头文件作用）：
1. 符号常量定义：
   - 用 `#define` 定义程序中用到的常量（如酒店房价、退出码、折扣率等 ），让常量集中管理，修改时只需改头文件，所有包含该头文件的源文件都会同步更新，避免重复定义和漏改。
2. 函数原型声明：
   - 声明 `menu`、`getnights`、`showprice` 函数的原型，告诉编译器这些函数的返回值类型、参数列表，让其他源文件（如 `usehotel.c` ）能调用这些函数，实现函数定义和调用的分离。
3. 头文件包含保护（可选，这里简单示例没写，实际复杂项目建议加 `#ifndef` 保护 ）：
   - 防止头文件被重复包含，避免因重复定义导致编译错误。虽然本示例简单没体现，但要知道头文件保护的重要性。

本头文件总体逻辑：
把整个程序中公共的符号常量和函数接口提炼出来，作为其他源文件的“接口文件”。`usehotel.c`（主逻辑 ）和 `hotel.c`（函数实现 ）只需包含这个头文件，就能共享常量和调用函数，实现多文件协作开发。
*/

#ifndef HOTEL_H // 头文件保护（可选添加，防止重复包含）
#define HOTEL_H

// 符号常量定义
#define QUIT 5           // 退出选项编号
#define HOTEL1 180.00    // 酒店1房价
#define HOTEL2 225.00    // 酒店2房价
#define HOTEL3 255.00    // 酒店3房价
#define HOTEL4 355.00    // 酒店4房价
#define DISCOUNT 0.95    // 每日房价折扣率
#define STARS "****************************************"  // 装饰用星号

// 函数原型声明
// 显示菜单并返回用户选择的酒店编号
int menu(void);  
// 获取用户输入的入住天数，处理非整数输入
int getnights(void);  
// 根据房价、入住天数计算并显示总费用
void showprice(double rate, int nights);  

#endif